error: All fields of tuple structs must be annotated with `#[diesel(column_name)]`
  --> tests/fail/derive/queryable_by_name_requires_table_name_or_sql_type_annotation.rs:10:10
   |
10 | #[derive(QueryableByName)]
   |          ^^^^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `QueryableByName` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: cannot deserialize a value of the database type `_` as `i32`
 --> tests/fail/derive/queryable_by_name_requires_table_name_or_sql_type_annotation.rs:4:10
  |
4 | #[derive(QueryableByName)]
  |          ^^^^^^^^^^^^^^^ the trait `FromSql<_, __DB>` is not implemented for `i32`
  |
  = note: double check your type mappings via the documentation of `_`
  = help: the following other types implement trait `FromSql<A, DB>`:
            <i32 as FromSql<diesel::sql_types::Integer, Mysql>>
            <i32 as FromSql<diesel::sql_types::Integer, Pg>>
            <i32 as FromSql<diesel::sql_types::Integer, Sqlite>>
note: required by a bound in `diesel::row::NamedRow::get`
 --> $DIESEL/src/row.rs
  |
  |     fn get<ST, T>(&self, column_name: &str) -> deserialize::Result<T>
  |        --- required by a bound in this associated function
  |     where
  |         T: FromSql<ST, DB>;
  |            ^^^^^^^^^^^^^^^ required by this bound in `NamedRow::get`
  = note: this error originates in the derive macro `QueryableByName` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: cannot deserialize a value of the database type `_` as `*const str`
 --> tests/fail/derive/queryable_by_name_requires_table_name_or_sql_type_annotation.rs:4:10
  |
4 | #[derive(QueryableByName)]
  |          ^^^^^^^^^^^^^^^ the trait `FromSql<_, __DB>` is not implemented for `*const str`, which is required by `std::string::String: FromSql<_, __DB>`
  |
  = note: double check your type mappings via the documentation of `_`
  = help: the following other types implement trait `FromSql<A, DB>`:
            <*const str as FromSql<diesel::sql_types::Text, Mysql>>
            <*const str as FromSql<diesel::sql_types::Text, Pg>>
            <*const str as FromSql<diesel::sql_types::Text, Sqlite>>
  = note: required for `std::string::String` to implement `FromSql<_, __DB>`
note: required by a bound in `diesel::row::NamedRow::get`
 --> $DIESEL/src/row.rs
  |
  |     fn get<ST, T>(&self, column_name: &str) -> deserialize::Result<T>
  |        --- required by a bound in this associated function
  |     where
  |         T: FromSql<ST, DB>;
  |            ^^^^^^^^^^^^^^^ required by this bound in `NamedRow::get`
  = note: this error originates in the derive macro `QueryableByName` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared crate or module `foos`
 --> tests/fail/derive/queryable_by_name_requires_table_name_or_sql_type_annotation.rs:5:8
  |
5 | struct Foo {
  |        ^^^ use of undeclared crate or module `foos`
