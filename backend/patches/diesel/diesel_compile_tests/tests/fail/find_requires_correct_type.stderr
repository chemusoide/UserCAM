error[E0277]: the trait bound `str: diesel::Expression` is not satisfied
  --> tests/fail/find_requires_correct_type.rs:20:28
   |
20 |     int_primary_key::table.find("1");
   |                            ^^^^ the trait `diesel::Expression` is not implemented for `str`, which is required by `SelectStatement<FromClause<int_primary_key::table>>: FilterDsl<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<int_primary_key::columns::id, _>>>`
   |
   = help: the following other types implement trait `diesel::Expression`:
             Box<T>
             string_primary_key::columns::id
             string_primary_key::columns::star
             int_primary_key::columns::id
             int_primary_key::columns::star
             diesel::expression::ops::numeric::Add<Lhs, Rhs>
             diesel::expression::ops::numeric::Sub<Lhs, Rhs>
             diesel::expression::ops::numeric::Mul<Lhs, Rhs>
           and $N others
   = note: required for `&str` to implement `diesel::Expression`
   = note: 1 redundant requirement hidden
   = note: required for `diesel::expression::operators::Eq<int_primary_key::columns::id, &str>` to implement `diesel::Expression`
   = note: required for `SelectStatement<FromClause<int_primary_key::table>>` to implement `FilterDsl<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<int_primary_key::columns::id, &str>>>`

error[E0277]: the trait bound `str: ValidGrouping<()>` is not satisfied
  --> tests/fail/find_requires_correct_type.rs:20:28
   |
20 |     int_primary_key::table.find("1");
   |                            ^^^^ the trait `ValidGrouping<()>` is not implemented for `str`, which is required by `SelectStatement<FromClause<int_primary_key::table>>: FilterDsl<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<int_primary_key::columns::id, _>>>`
   |
   = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
             <Box<T> as ValidGrouping<GB>>
             <string_primary_key::columns::id as ValidGrouping<()>>
             <string_primary_key::columns::id as ValidGrouping<__GB>>
             <string_primary_key::columns::star as ValidGrouping<__GB>>
             <int_primary_key::columns::id as ValidGrouping<()>>
             <int_primary_key::columns::id as ValidGrouping<__GB>>
             <int_primary_key::columns::star as ValidGrouping<__GB>>
             <diesel::expression::ops::numeric::Add<Lhs, Rhs> as ValidGrouping<__GroupByClause>>
           and $N others
   = note: required for `&str` to implement `ValidGrouping<()>`
   = note: 1 redundant requirement hidden
   = note: required for `diesel::expression::operators::Eq<int_primary_key::columns::id, &str>` to implement `ValidGrouping<()>`
   = note: required for `diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<int_primary_key::columns::id, &str>>` to implement `NonAggregate`
   = note: required for `SelectStatement<FromClause<int_primary_key::table>>` to implement `FilterDsl<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<int_primary_key::columns::id, &str>>>`

error[E0277]: the trait bound `{integer}: diesel::Expression` is not satisfied
  --> tests/fail/find_requires_correct_type.rs:22:36
   |
22 |     string_primary_key::table.find(1);
   |                               ---- ^ the trait `diesel::Expression` is not implemented for `{integer}`, which is required by `string_primary_key::table: FindDsl<_>`
   |                               |
   |                               required by a bound introduced by this call
   |
   = help: the following other types implement trait `diesel::Expression`:
             Box<T>
             string_primary_key::columns::id
             string_primary_key::columns::star
             int_primary_key::columns::id
             int_primary_key::columns::star
             diesel::expression::ops::numeric::Add<Lhs, Rhs>
             diesel::expression::ops::numeric::Sub<Lhs, Rhs>
             diesel::expression::ops::numeric::Mul<Lhs, Rhs>
           and $N others
   = note: required for `diesel::expression::operators::Eq<string_primary_key::columns::id, {integer}>` to implement `diesel::Expression`
note: required for `string_primary_key::columns::id` to implement `EqAll<{integer}>`
  --> tests/fail/find_requires_correct_type.rs:13:9
   |
13 |         id -> VarChar,
   |         ^^
   = note: required for `string_primary_key::table` to implement `FindDsl<{integer}>`
note: required by a bound in `diesel::QueryDsl::find`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn find<PK>(self, id: PK) -> Find<Self, PK>
   |        ---- required by a bound in this associated function
   |     where
   |         Self: methods::FindDsl<PK>,
   |               ^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::find`

error[E0277]: the trait bound `{integer}: ValidGrouping<()>` is not satisfied
  --> tests/fail/find_requires_correct_type.rs:22:36
   |
22 |     string_primary_key::table.find(1);
   |                               ---- ^ the trait `ValidGrouping<()>` is not implemented for `{integer}`, which is required by `string_primary_key::table: FindDsl<_>`
   |                               |
   |                               required by a bound introduced by this call
   |
   = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
             <Box<T> as ValidGrouping<GB>>
             <string_primary_key::columns::id as ValidGrouping<()>>
             <string_primary_key::columns::id as ValidGrouping<__GB>>
             <string_primary_key::columns::star as ValidGrouping<__GB>>
             <int_primary_key::columns::id as ValidGrouping<()>>
             <int_primary_key::columns::id as ValidGrouping<__GB>>
             <int_primary_key::columns::star as ValidGrouping<__GB>>
             <diesel::expression::ops::numeric::Add<Lhs, Rhs> as ValidGrouping<__GroupByClause>>
           and $N others
   = note: required for `diesel::expression::operators::Eq<string_primary_key::columns::id, {integer}>` to implement `ValidGrouping<()>`
   = note: required for `diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<string_primary_key::columns::id, {integer}>>` to implement `NonAggregate`
   = note: required for `SelectStatement<FromClause<string_primary_key::table>>` to implement `FilterDsl<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<string_primary_key::columns::id, {integer}>>>`
   = note: 1 redundant requirement hidden
   = note: required for `string_primary_key::table` to implement `FilterDsl<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<string_primary_key::columns::id, {integer}>>>`
   = note: required for `string_primary_key::table` to implement `FindDsl<{integer}>`
note: required by a bound in `diesel::QueryDsl::find`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn find<PK>(self, id: PK) -> Find<Self, PK>
   |        ---- required by a bound in this associated function
   |     where
   |         Self: methods::FindDsl<PK>,
   |               ^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::find`
